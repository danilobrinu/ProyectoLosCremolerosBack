@model UTP.PortalEmpleabilidad.Modelo.AlumnoEstudio

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" id="idCloseEstudio">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="Estudio">Estudio</h4>
    </div>
    <div class="modal-body">

        @Html.HiddenFor(m => m.IdAlumno)
        @Html.HiddenFor(m => m.IdCV)
        @Html.HiddenFor(m => m.Movimiento)
        @Html.HiddenFor(m => m.IdEstudio)
        @Html.Hidden("Codigo")
        @Html.Hidden("Valor")
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Año<br />Inicio</span>
                    @Html.TextBoxFor(m => m.FechaInicioAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Inicio" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Mes<br />Inicio</span>
                    @Html.DropDownListFor(m => m.FechaInicioMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar -", htmlAttributes: new { @class = "form-control", id = "FechaInicioMes" })

                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioMes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" id="areaFechaFin">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Año Fin</span>
                    @Html.TextBoxFor(m => m.FechaFinAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Fin", id = "FechaFinAno" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaFinAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Mes Fin</span>
                    @Html.DropDownListFor(m => m.FechaFinMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar -", htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Tipo</span>
                    @Html.DropDownListFor(m => m.TipoDeEstudio, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.TipoDeEstudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)<br />Institución</span>
                    @Html.TextBoxFor(m => m.Institucion, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre de la Institución Educativa" })
                </div>
                @Html.ValidationMessageFor(m => m.Institucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">

            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Estudio</span>
                    @Html.TextBoxFor(m => m.Estudio, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre del Estudio y/o Carrera", @id = "estudio" })
                </div>
                @Html.ValidationMessageFor(m => m.Estudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Estado</span>
                    @Html.DropDownListFor(m => m.EstadoDelEstudio, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.EstadoDelEstudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Observa-<br />ción</span>

                    @Html.DropDownListFor(m => m.Observacion, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })


                </div>
            </div>
            <div class="col-sm-4" id="areaCiclo">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Ciclo</span>
                    @Html.TextBoxFor(m => m.CicloEquivalente, htmlAttributes: new { @class = "form-control", @placeholder = "Ciclo de Estudios" })
                </div>
                @Html.ValidationMessageFor(m => m.CicloEquivalente, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 text-right">
                <input type="submit" class="btn btn-default color-paleta4 fuente-pequeña" style="color: white; margin-bottom: 10px;" id="IdRegistrarEstudio" value="Guardar" />
            </div>
        </div>
    </div>
    <div class="modal-footer">
    </div>
</div>

<script>

    $(document).ready(function () {

        AutoCompleteText('#estudio', '@Url.Action("ListarEstudio", "Empresa")', '#estudio');

        //Al cargar la pantalla se debe mostrar/ocultar el campo ciclo:
        //Mostrar/Ocultar la caja de texto de ciclo.
        var EstadoDelEstudio = $("#EstadoDelEstudio").val()
        if (EstadoDelEstudio == "EDEEST" || EstadoDelEstudio == "EDEINC") {
            //Si el etado es Estudiante o Inconcluso se muestra
            $('#areaCiclo').css('display', 'block');
        }
        else {
            //Caso contrario se oculta.
            $('#areaCiclo').css('display', 'none');
        }

    });

    $('#EstadoDelEstudio').on('change', function () {

        //EDEBAC = Bachiller (completo)
        //EDEDOC = Doctor (completo)
        //EDEEGR = Egresado (completo)
        //EDEEST = Estudiante
        //EDEINC = Inconcluso
        //EDEMAG = Magister (completo)
        //EDETIT = Titulado (completo)

        var EstadoDelEstudio = $("#EstadoDelEstudio").val()
        if (EstadoDelEstudio == "EDEEST") {
            $('#areaFechaFin').css('display', 'none');  //los combos se ocultan
            
        }
        else {
            $('#areaFechaFin').css('display', 'block');  //los combos se muestran
            if (EstadoDelEstudio != "EDEINC") {
                $('#areaCiclo').css('display', 'none');  //Ciclo se oculta
            }
            else {
                $('#areaCiclo').css('display', 'block');  //Ciclo se muestra
            }
        }

        //Mostrar/Ocultar la caja de texto de ciclo.
        if (EstadoDelEstudio == "EDEEST" || EstadoDelEstudio == "EDEINC") {
            //Si el etado es Estudiante o Inconcluso se muestra
            $('#areaCiclo').css('display', 'block');
        }
        else
        {
            //Caso contrario se oculta.
            $('#areaCiclo').css('display', 'none');
        }

    })

</script>