@model UTP.PortalEmpleabilidad.Modelo.AlumnoEstudio

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" id="idCloseEstudio">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="Estudio">Estudio</h4>
    </div>
    <div class="modal-body">

        @Html.HiddenFor(m => m.IdAlumno)
        @Html.HiddenFor(m => m.IdCV)
        @Html.HiddenFor(m => m.Movimiento)
        @Html.HiddenFor(m => m.IdEstudio)
        @Html.Hidden("Codigo")
        @Html.Hidden("Valor")
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Año Inicio</span>
                    @Html.TextBoxFor(m => m.FechaInicioAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Inicio" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Mes Inicio</span>
                    @Html.DropDownListFor(m => m.FechaInicioMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar -", htmlAttributes: new { @class = "form-control" })

                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioMes, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Año Fin</span>
                    @Html.TextBoxFor(m => m.FechaFinAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Fin" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaFinAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Mes Fin</span>
                    @Html.DropDownListFor(m => m.FechaFinMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar -", htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Tipo</span>
                    @Html.DropDownListFor(m => m.TipoDeEstudio, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.TipoDeEstudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Institución</span>
                    @Html.TextBoxFor(m => m.Institucion, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre de la Institución Educativa" })
                </div>
                @Html.ValidationMessageFor(m => m.Institucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">

            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Estudio</span>
                    @Html.TextBoxFor(m => m.Estudio, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre del Estudio y/o Carrera" })
                </div>
                @Html.ValidationMessageFor(m => m.Estudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Estado</span>
                    @Html.DropDownListFor(m => m.EstadoDelEstudio, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.EstadoDelEstudio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Observa-<br />ción</span>

                    @Html.DropDownListFor(m => m.Observacion, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })


                </div>
            </div>
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Ciclo</span>
                    @Html.TextBoxFor(m => m.CicloEquivalente, htmlAttributes: new { @class = "form-control", @placeholder = "Ciclo de Estudios" })
                </div>
                @Html.ValidationMessageFor(m => m.CicloEquivalente, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="row">
            <div class="col-sm-12 text-right">
                <input type="submit" class="btn btn-default color-paleta4 fuente-pequeña" style="color: white; margin-bottom: 10px;" id="IdRegistrarEstudio" value="Grabar Estudio" />
            </div>
        </div>
    </div>
    <div class="modal-footer">
    </div>
</div>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        @*AutoComplete("#Estudio",'@Url.Action("ListarEstudio", "Alumno")', "#Valor", "#Codigo");*@
        $("#Estudio").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("ListarEstudio", "Alumno")',
                    data: "{ 'query': '" + request.term + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(data);
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $("#Codigo").val(ui.item.id);
                $("#Valor").val(ui.item.value);

                alert($("#Codigo").val());
                alert($("#Valor").val());

            }
        });
    })

    //function AutoComplete(inputsearch, urlsearch, inputtext, inputid) {
    //    alert(urlsearch);
    //    $(inputsearch).autocomplete({
    //        source: function (request, response) {
    //            $.ajax({
    //                url: urlsearch,
    //                data: "{ 'query': '" + request.term + "' }",
    //                dataType: "json",
    //                type: "POST",
    //                contentType: "application/json; charset=utf-8",
    //                dataFilter: function (data) { return data; },
    //                success: function (data) {
    //                    response($.map(data, function (item) {
    //                        console.log(data);
    //                        return {
    //                            value: item.Label,
    //                            id: item.Value
    //                        }
    //                    }))
    //                },
    //                error: function (XMLHttpRequest, textStatus, errorThrown) {
    //                    alert(textStatus);
    //                }
    //            });
    //        },
    //        minLength: 1,
    //        select: function (even, ui) {
    //            $(inputid).val(ui.item.id);
    //            $(inputtext).val(ui.item.value);

    //            alert($(inputid).val());
    //            alert($(inputtext).val());

    //        }
    //    });
    //}
</script>


