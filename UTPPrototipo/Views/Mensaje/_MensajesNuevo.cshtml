@model UTP.PortalEmpleabilidad.Modelo.Mensaje
@using UTP.PortalEmpleabilidad.Modelo

<div class="modal-content">
    <div class="modal-header">
        <!--Se agrega el método "cerrarModal" para eliminar todos los html del modal. Esto evita que haya elementos html con el mismo nombre. -->
        <button type="button" class="close" onclick="cerrarModal();" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Nuevo Mensaje</h4>
    </div>
    <div class="modal-body">

        @Html.HiddenFor(m => m.DeUsuario)
        @Html.HiddenFor(m => m.DeUsuarioCorreoElectronico)

        @if (ViewBag.Pantalla != Constantes.MENSAJES_UTP_INDEX)
        {
            @Html.HiddenFor(m => m.ParaUsuario)
            @Html.HiddenFor(m => m.ParaUsuarioCorreoElectronico)
        }


        @Html.HiddenFor(m => m.Pantalla)

        @if (ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_INDEX || ViewBag.Pantalla == Constantes.MENSAJES_UTP_INDEX || ViewBag.Pantalla == Constantes.MENSAJES_UTP_ALUMNO
            || ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_EVENTO || ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_EVENTO
            || ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_HUNTING || ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_OFERTA
            || ViewBag.Pantalla == Constantes.MENSAJES_UTP_EMPRESA || ViewBag.Pantalla == Constantes.MENSAJES_UTP_OFERTA)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Destina-<br />tario</span>
                        @*<input id="inpUsuarioPara" name="ParaUsuario" class="form-control" placeholder="Usuario Destinatario" value="@Model.ParaUsuario" />*@
                        <input id="inpUsuarioParaNombre" name="ParaUsuarioNombre" class="form-control" value="@Model.ParaUsuarioNombre" />
                        <input id="inpUsuarioPara" name="ParaUsuario" type="hidden" class="form-control" placeholder="Ingrese Código del Alumno o selecciona Oferta" value="@Model.ParaUsuario" />
                    </div>
                </div>
            </div>
        }

        @if (ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_INDEX || ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_OFERTA
            || ViewBag.Pantalla == Constantes.MENSAJES_UTP_EVENTO)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Destina-<br />tario</span>
                        <select id="slcDestinatarios" name="slcDestinatarios" class="form-control"></select>
                    </div>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Asunto</span>
                    <input id="Asunto" name="Asunto" class="form-control" placeholder="Asunto del Correo" value="@Model.Asunto" />
                </div>
            </div>
        </div>

        @if (ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_INDEX || ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_INDEX
            || ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_OFERTA || ViewBag.Pantalla == Constantes.MENSAJES_UTP_ALUMNO
            || ViewBag.Pantalla == Constantes.MENSAJES_UTP_OFERTA || ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_HUNTING
            || ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_OFERTA)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Oferta<br />Laboral</span>
                        @Html.DropDownListFor(m => m.IdOfertaMensaje, null, "- Seleccione Oferta Laboral relacionada -", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.IdOfertaMensaje, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_OFERTA || ViewBag.Pantalla == Constantes.MENSAJES_UTP_OFERTA)
        {
            @Html.HiddenFor(m => m.IdOfertaMensaje)
        }
        <!--, onchange = "democambio(this.value)"-->
        @*@if (ViewBag.Pantalla == "")
            {
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">Evento</span>
                            <select class="form-control">
                                <option>- Seleccione Evento relacionado -</option>
                                <option>Feria de Trabajo 2015</option>
                                <option>Charla RRHH</option>
                                <option>Seminaro de Presentación</option>
                            </select>
                        </div>
                    </div>
                </div>
            }*@

        <!--
        if (ViewBag.Pantalla == "")
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Oferta<br />Laboral</span>
                        Model.Oferta.CargoOfrecido
                        Html.HiddenFor(m => m.IdOfertaMensaje)
                    </div>
                    <a href="#">Gerente de Proyectos (IBM del Perú)</a>*

                </div>
            </div>
        }
        -->
        @if (ViewBag.Pantalla == Constantes.MENSAJES_EMPRESA_EVENTO || ViewBag.Pantalla == Constantes.MENSAJES_ALUMNO_EVENTO || ViewBag.Pantalla == Constantes.MENSAJES_UTP_EVENTO)
        {
            @Html.HiddenFor(m => m.IdEvento)
            @*<div class="row">
                    <div class="col-sm-12">
                        @Model.Evento.NombreEvento
                    </div>
                </div>*@

        }

        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Mensaje</span>
                    <textarea id="MensajeTexto" name="MensajeTexto" class="form-control" placeholder="Mensaje del Correo" rows="10"></textarea>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button onclick="return validarDatos();" id="btnEnviarMensaje" type="submit" class="btn btn-primary color-paleta-msg-btn">Enviar</button>
    </div>
</div>
<script>

    function validarDatos()
    {
        var pantalla = $('#Pantalla').val();

        var destinatarioCombos = $('#slcDestinatarios').val();
        var destinatarioCajaTexto = $('#inpUsuarioPara').val();  //Este campo es la caja de texto que se muestra al usuario.
        var destinatario = $('#ParaUsuarioCorreoElectronico').val(); //Este campo es oculto y se carga cuando se selecciona un item del combo de destinatarios.
        var oferta = $('#IdOfertaMensaje').val();
        var asunto = $('#Asunto').val();
        var mensaje = $('#MensajeTexto').val();

        //debugger;
        var mensajeError = "";

        if (destinatarioCombos == "") mensajeError += "No ha ingresado el destinatario. \r";

        //Si la pantalla es UTP - Index entonces se valida que el control inpUsuarioPara esté completo.
        if (pantalla == '@Constantes.MENSAJES_UTP_INDEX' )
        {
            if (destinatarioCajaTexto == "" || typeof destinatarioCajaTexto == "undefined")
            {
                mensajeError += "No ha ingresado el destinatario. \r";
            }
        }
        else //Caso contratio se valida el control hidden.
        {
            if (destinatario == "" || typeof destinatario == "undefined") mensajeError += "No ha ingresado el destinatario. \r";
        }

        //if (oferta == "") mensajeError += "No ha ingresado la oferta. \r";
        if (asunto == "" || typeof asunto == "undefined") mensajeError += "No ha ingresado el asunto. \r";
        if (mensaje == "" || typeof mensaje == "undefined") mensajeError += "No ha ingresado mensaje. \r";

        if (mensajeError == "")
        {
            return true;
        }
        else
        {
            alert(mensajeError);
            return false;
        }
    }

    $(document).ready(function () {
        //debugger;
        var pantalla = $('#Pantalla').val();

        if (pantalla == '@Constantes.MENSAJES_ALUMNO_INDEX' || pantalla == '@Constantes.MENSAJES_UTP_INDEX' || pantalla == '@Constantes.MENSAJES_UTP_ALUMNO'
            || pantalla == '@Constantes.MENSAJES_EMPRESA_EVENTO' || pantalla == '@Constantes.MENSAJES_ALUMNO_EVENTO' || pantalla == '@Constantes.MENSAJES_EMPRESA_HUNTING'
            || pantalla == '@Constantes.MENSAJES_ALUMNO_OFERTA' || pantalla == '@Constantes.MENSAJES_UTP_EMPRESA' || pantalla == '@Constantes.MENSAJES_UTP_OFERTA')
        {
            //$('#inpUsuarioParaNombre').attr("readonly","readonly");
            //return false;
        }

        //Se establece el valor del combo de ofertas y se deshabilita del campo:
        if (pantalla == '@Constantes.MENSAJES_ALUMNO_OFERTA' || pantalla == '@Constantes.MENSAJES_UTP_OFERTA')
        {
            var idOferta = @ViewBag.IdOfertaGeneral
            $('#IdOfertaMensaje').val(idOferta);
            $('#IdOfertaMensaje').attr("readonly","readonly");
            $('#inpUsuarioParaNombre').attr("readonly","readonly");
            return false;
        }

        if (pantalla == '@Constantes.MENSAJES_EMPRESA_OFERTA') {
            var idOferta = @ViewBag.IdOfertaGeneral

            $('#IdOfertaMensaje').val(idOferta);

            //Llamada al controlador para cargar a los postulantes de la oferta seleccionada.
            var url = '@Url.Action("ObtenerPostulantesPorOferta", "Mensaje")' + '?IdOferta=' + idOferta;

            $('#slcDestinatarios option[value!="0"]').remove();
            $("#slcDestinatarios").append("<option selected>- Cargando destinatarios ... -</option>")

            $.getJSON(url, cargarComboDestinatarios).error(function (err) { console.log(err); });

            //$('#IdOfertaMensaje').attr('disabled','disabled'); //Se deshabilita el combo de ofertas.
        }

        if (pantalla == '@Constantes.MENSAJES_UTP_EVENTO') {

            var idEvento = @ViewBag.IdEventoGeneral

            //Llamada al controlador para cargar a los postulantes del evento seleccionado.
            var url = '@Url.Action("ObtenerAsistentesPorEvento", "Mensaje")' + '?idEvento=' + idEvento;

            $('#slcDestinatarios option[value!="0"]').remove();
            //Se muestra un mensaje de cargando asistentes.
            $("#slcDestinatarios").append("<option selected>- Cargando asistentes ... -</option>")

            //Se llama al método ajax que obtiene la lista.
            $.getJSON(url, cargarComboAsistentes).error(function (err) { console.log(err); });

        }

        $('#IdOfertaMensaje').on('change', function () {


            if (pantalla == '@Constantes.MENSAJES_UTP_ALUMNO') {
                return false;
            }

            if (pantalla == '@Constantes.MENSAJES_ALUMNO_OFERTA')
            {
                return false;
            }

            //debugger;
            //console.log('IfOfertaChange');

            var idOfertaSeleccionada = this.value;
            var optionValueOferta = $('#IdOfertaMensaje').val();
            //debugger;
            if (optionValueOferta == '' || optionValueOferta == 0)
            {
                //Se limpian los datos
                $('#slcDestinatarios option[value!="0"]').remove();
                $("#slcDestinatarios").val(0);
                $("#Asunto").val('');
                $("#inpUsuarioPara").val('');
                $("#inpUsuarioPara").removeAttr("readonly"); //Se quita la propiedad de readonly para que el campo esté disponible para edición
                //Las siguientes dos variables son internas, sirve para almacenar el usuario y correo del destinatario.
                $('#ParaUsuario').val('');
                $('#ParaUsuarioCorreoElectronico').val('');
            }
            else
            {
                var cargoOfrecidoSeleccionado = $('#IdOfertaMensaje option:selected').text();
                console.log(cargoOfrecidoSeleccionado);
                $("#Asunto").val(cargoOfrecidoSeleccionado);
            }


            var pantalla = $('#Pantalla').val();

            //debugger;



            if (pantalla == '@Constantes.MENSAJES_EMPRESA_INDEX' || pantalla == '@Constantes.MENSAJES_EMPRESA_OFERTA') {
                var url = '@Url.Action("ObtenerPostulantesPorOferta", "Mensaje")' + '?IdOferta=' + idOfertaSeleccionada;

                $('#slcDestinatarios option[value!="0"]').remove();
                $("#slcDestinatarios").append("<option selected>- Cargando destinatarios ... -</option>")

                $.getJSON(url, cargarComboDestinatarios).error(function (err) { console.log(err); });

            }
            if (pantalla == '@Constantes.MENSAJES_ALUMNO_INDEX') {

                //console.log('EmpresaOferta');
                var url = '@Url.Action("ObtenerUsuarioEmpresaPorOferta", "Mensaje")' + '?IdOferta=' + idOfertaSeleccionada;

                $.getJSON(url, cargarDatosUsuarioPara)
            }

            if (pantalla == '@Constantes.MENSAJES_ALUMNO_OFERTA') {

                var url = '@Url.Action("ObtenerDestinatariosUTPOferta", "Mensaje")' + '?IdOferta=' + idOfertaSeleccionada;

                $.getJSON(url, cargarDestinatariosUTPOferta)
            }

        }).error(function (err) { console.log(err); });

        function cargarComboDestinatarios(data) {
            console.log(data);

            $('#slcDestinatarios option[value!="0"]').remove();
            $("#slcDestinatarios").append("<option selected>- Seleccione Alumno Destinatario -</option>")

            //Se crea un html con el combo de destinatarios.
            for (var i = 0; i < data.length; i++) {

                $("#slcDestinatarios").append("<option data-usuario='" + data[i].Usuario + "' value= '" + data[i].CorreoElectronico + "'>" + data[i].Alumno.Apellidos + " " + data[i].Alumno.Nombres + "</option>")
            }
        }

        function cargarDatosUsuarioPara(data) {
            //console.log(data);
            //Se setea el campo:
            $("#inpUsuarioPara").val(data.UsuarioPropietarioEmpresa);
            $("#inpUsuarioParaNombre").val(data.UsuarioPropietarioEmpresa);
            //Se bloquea el campo:
            $("#inpUsuarioPara").attr('readonly', 'readonly')

            //Se guardan los datos del usuario Para:
            $('#ParaUsuario').val(data.UsuarioPropietarioEmpresa);
            $('#ParaUsuarioNombre').val(data.UsuarioPropietarioEmpresa);
            $('#ParaUsuarioCorreoElectronico').val(data.UsuarioPropietarioEmpresaCorreo);
        }

        function cargarDestinatariosUTPOferta(data) {
            //console.log(data);

            $('#slcDestinatarios option[value!="0"]').remove();
            $("#slcDestinatarios").append("<option selected>- Seleccione Alumno Destinatario -</option>")

            for (var i = 0; i < data.length; i++) {

                $("#slcDestinatarios").append("<option data-usuario='" + data[i].Usuario + "' value= '" + data[i].CorreoElectronico + "'>" + data[i].TextoAMostrar + "</option>");
            }
        }

        function cargarComboAsistentes(data) {
            console.log(data);

            $('#slcDestinatarios option[value!="0"]').remove();
            $("#slcDestinatarios").append("<option selected>- Seleccione Alumno Destinatario -</option>")

            //Se crea un html con el combo de destinatarios.
            for (var i = 0; i < data.length; i++) {

                $("#slcDestinatarios").append("<option data-usuario='" + data[i].Usuario + "' value= '" + data[i].CorreoElectronico + "'>" + data[i].Apellidos + " " + data[i].Nombres + "</option>")
            }
        }

        //Se almacen el nombre del usuario en un Hidden que está enlazado al modelo.
        $('#slcDestinatarios').on('change', function () {

            var correoElectronico = this.value;
            var nombreUsuario = $(this).find(':selected').data('usuario');

            $('#ParaUsuario').val(nombreUsuario);
            $('#ParaUsuarioNombre').val(nombreUsuario);
            $('#ParaUsuarioCorreoElectronico').val(correoElectronico);

            //console.log(correoElectronico);
            //console.log(nombreUsuario);

        });

    });

</script>