@model UTP.PortalEmpleabilidad.Modelo.Oferta

@using UTP.PortalEmpleabilidad.Modelo;

@{
    Layout = "~/Views/Empresa/_LayoutEmpresa.cshtml";
    ViewBag.Title = "Nueva Oferta Laboral";
}
<div class="container" style="margin-top:2px;">

    @{Html.RenderAction("VistaCabecera", "Empresa");}

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <!--Se guardar los Id's en archivos temporales-->
        @Html.HiddenFor(model => model.IdOferta)
        @Html.HiddenFor(model => model.IdEmpresa)
        @Html.HiddenFor(model => model.CreadoPor)

        <div class="row">
            <div class="col-sm-3 fuente-seccion">
                Edición de Oferta Laboral
            </div>
            <div class="col-sm-3 fuente-seccion">
                Estado: Pendiente de Activación
            </div>
            <div class="col-sm-3 fuente-seccion">
                @*<input type="checkbox" /><span> Recibir correos&nbsp;&nbsp;&nbsp;&nbsp;</span>*@
                @*Alertas: @Html.DropDownList("RecibeCorreosIdListaValor", null, htmlAttributes: new { @class = "form-control" })*@
                Alertas *: @Html.DropDownListFor(m => m.RecibeCorreosIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RecibeCorreosIdListaValor, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3 fuente-seccion" style="text-align:right;">
                <button class="btn btn-default color-paleta2" style="margin-bottom:5px;">Grabar Cambios</button>

            </div>
        </div>

        <script src="~/Scripts/ckeditor/ckeditor.js"></script>

        <div id="divDescripcionOferta" class="row">

            <div class="col-sm-6">

                <div class="panel-group" id="oferta-anuncio" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingOferta" style="padding: 2px 2px 2px 6px;">
                            <h5 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOferta" aria-expanded="true" aria-controls="collapseOferta" class="fuente-seccion">
                                    Descripción de la Oferta
                                </a>
                            </h5>
                        </div>
                        <div id="collapseOferta" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOferta">
                            <div class="panel-body fuente-pequeña">
                                <div class="input-group">
                                    <span class="input-group-addon">Cargo</span>
                                    @*<input id="CargoOfrecido" data-val="true" data-val-required="No ha ingresado el campo" name="CargoOfrecido" type="text" class="form-control" placeholder="Nombre del cargo a publicar" value="@Model.CargoOfrecido">*@
                                    @Html.TextBoxFor(m => m.CargoOfrecido, new { @class = "form-control", @placeholder = "Nombre del cargo a publicar" })
                                    @Html.ValidationMessageFor(m => m.CargoOfrecido, "", new { @class = "text-danger" })
                                    @*<input class="text-box single-line" id="CargoOfrecido" name="CargoOfrecido" type="text" value="">*@
                                    @*@Html.EditorFor(model => model.CargoOfrecido, new { @class = "form-control" })*@
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Funciones</span>
                                    @*<textarea class="form-control" rows="6"></textarea>*@
                                    <textarea name="Funciones" id="Funciones" rows="6" cols="80">@Html.Raw(@Model.Funciones)</textarea>
                                    @Html.ValidationMessageFor(m => m.Funciones, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Compe-<br />tencias</span>
                                    @*<textarea class="form-control" rows="4"></textarea>*@
                                    <textarea name="Competencias" id="Competencias" rows="6" cols="80">@Html.Raw(@Model.Competencias)</textarea>
                                    @Html.ValidationMessageFor(m => m.Competencias, "", new { @class = "text-danger" })
                                </div>
                                <br />

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <script>

                CKEDITOR.replace('Funciones');
                CKEDITOR.replace('Competencias');
            </script>

            <div class="col-sm-6">

                <div class="panel-group" id="oferta-condiciones" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingDetalle" style="padding: 2px 2px 2px 6px;">
                            <h5 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseDetalle" aria-expanded="true" aria-controls="collapseDetalle" class="fuente-seccion">
                                    Condiciones de la Oferta
                                </a>
                            </h5>
                        </div>
                        <div id="collapseDetalle" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetalle">
                            <div class="panel-body fuente-pequeña">
                                <div class="input-group">
                                    <span class="input-group-addon">Recibir<br />CVs hasta</span>                                    
                                    @Html.Raw(@Html.EditorFor(m => m.FechaFinRecepcionCV).ToString().Replace("text-box single-line", "form-control"))
                                    @Html.ValidationMessageFor(m => m.FechaFinRecepcionCV, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Área</span>
                                    @*<input id="AreaEmpresa" name="AreaEmpresa" type="text" class="form-control" placeholder="Área o división de la empresa" value="@Model.AreaEmpresa">*@
                                    @Html.TextBoxFor(m => m.AreaEmpresa, new { @class = "form-control", @placeholder = "Área o división de la empresa" })
                                    @Html.ValidationMessageFor(m => m.AreaEmpresa, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Tipo de<br />Cargo</span>                                    
                                    @Html.DropDownListFor(m => m.TipoCargoIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.TipoCargoIdListaValor, "", new { @class = "text-danger" })

                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Tipo de<br />Trabajo</span>
                                    @Html.DropDownListFor(m => m.TipoTrabajoIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.TipoTrabajoIdListaValor, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Tipo de<br />Contrato</span>
                                    @Html.DropDownListFor(m => m.TipoContratoIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.TipoContratoIdListaValor, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Duración<br />en meses</span>
                                    @*<input id="DuracionContrato" name="DuracionContrato" type="text" class="form-control" placeholder="Vacio si es indeterminada" value="@Model.DuracionContrato">*@
                                    @Html.TextBoxFor(m => m.DuracionContrato, new { @class = "form-control", @placeholder = "Vacío si es indeterminada" })
                                    @Html.ValidationMessageFor(m => m.DuracionContrato, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Horario</span>
                                    @*<input id="Horario" name="Horario" type="text" class="form-control" placeholder="Ej: De Lunes a Viernes de 9:00am a 6:00pm" value="@Model.Horario">*@
                                    @Html.TextBoxFor(m => m.Horario, new { @class = "form-control", @placeholder = "Ej: De Lunes a Viernes de 9:00am a 6:00pm" })
                                    @Html.ValidationMessageFor(m => m.Horario, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon">Sueldo S/.</span>
                                    @*<input id="RemuneracionOfrecida" name="RemuneracionOfrecida" type="text" class="form-control" placeholder="Sueldo a pagar en Nuevos Soles" value="@Model.RemuneracionOfrecida">*@
                                    @Html.TextBoxFor(m => m.RemuneracionOfrecida, new { @class = "form-control", @placeholder = "Sueldo a pagar en Nuevos Soles" })
                                    @Html.ValidationMessageFor(m => m.RemuneracionOfrecida, "", new { @class = "text-danger" })
                                </div>


                                <div class="input-group">
                                    <span class="input-group-addon">Vacantes</span>
                                    @*<input id="NumeroVacantes" name="NumeroVacantes" type="text" class="form-control" placeholder="Número de vacantes para el puesto" value="@Model.NumeroVacantes">*@
                                    @Html.TextBoxFor(m => m.NumeroVacantes, new { @class = "form-control", @placeholder = "Número de vacantes para el puesto" })
                                    @Html.ValidationMessageFor(m => m.NumeroVacantes, "", new { @class = "text-danger" })
                                </div>
                                <div class="row">
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <span class="input-group-addon">Ubicación</span>
                                            @Html.DropDownListFor(m => m.IdEmpresaLocacion, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.IdEmpresaLocacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-5 fuente-pequeña" style="text-align:right;">
                                        <button class="btn btn-default color-paleta2">Nueva Ubicación</button>
                                    </div>
                                </div>

                                <br />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
    <div class="row">

        <div id="ofertaRequisitos" class="col-sm-6">
            <div class="panel-group" id="oferta-requisito" role="tablist" aria-multiselectable="true">
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingRequisito" style="padding: 2px 2px 2px 6px;">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#oferta-requisito" href="#collapseRequisito" aria-expanded="true" aria-controls="collapseRequisito" class="fuente-seccion">
                                Requisitos de la Oferta
                            </a>
                        </h5>
                    </div>
                    <div id="collapseRequisito" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingRequisito">
                        <div class="panel-body fuente-pequeña">
                            <div id="divListaEstudios">
                                @Html.Action("ObtenerEstudios", "OfertaEstudio", new { idOferta = Model.IdOferta })
                            </div>
                            <hr />

                            <div id="divListaSectores">
                                @Html.Action("ObtenerSectoresEmpresariales", "OfertaSectorEmpresarial", new { idOferta = Model.IdOferta })
                            </div>
                            <hr />

                            <div id="divListaInfoAdicional">
                                @Html.Action("ObtenerInformacionAdicional", "OfertaInformacionAdicional", new { idOferta = Model.IdOferta })
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="ofertaFases" class="col-sm-6">

            <div class="panel-group" id="oferta-fases" role="tablist" aria-multiselectable="true">
                <div id="divContenedorFases" class="panel panel-default">
                    @using (Ajax.BeginForm("_OfertaFaseEditar", "Empresa", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divContenedorFases", OnComplete = "alertTemporal" }))
                    {
                        @Html.AntiForgeryToken()
    
                        @Html.Action("ObtenerOfertaFase", "Empresa", new { idOferta = Model.IdOferta })
                       
                    }
                </div>
            </div>
        </div>

    </div>


</div>

@*<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@



<!--Bloque de modales-->
<!--Modal de estudio Crear-->
<div class="modal" id="divModalEstudio" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaEstudioCrear", "OfertaEstudio", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaEstudios", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearEstudioContenedor" class="modal-dialog">

        </div>
    }
</div>

<!--Modal de sector empresarial-->
<div class="modal" id="divModalSectorEmpresarial" tabindex="-1" role="dialog" aria-labelledby="ExperienciaLaboral" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaSectorEmpresarialCrear", "OfertaSectorEmpresarial", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaSectores", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearSectorEmpresarialContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de infomación adicional-->
<div class="modal" id="divModalInfoAdicional" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaInformacionAdicionalCrear", "OfertaInformacionAdicional", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaInfoAdicional", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearInfoAdicionalContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de estudio Editar-->
<div class="modal" id="divEditarModalEstudio" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaEstudioEditar", "OfertaEstudio", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaEstudios", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarEstudioContenedor" class="modal-dialog">

        </div>
    }
</div>

<!--Modal edición de sector empresarial-->
<div class="modal" id="divEditarModalSectorEmpresarial" tabindex="-1" role="dialog" aria-labelledby="ExperienciaLaboral" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaSectorEmpresarialEditar", "OfertaSectorEmpresarial", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaSectores", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarSectorEmpresarialContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de edición de infomación adicional-->
<div class="modal" id="divEditarModalInfoAdicional" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaInformacionAdicionalEditar", "OfertaInformacionAdicional", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaInfoAdicional", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarInfoAdicionalContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Bloque de javascript-->
<script>
    $(document).ready(function () {
        $("#divFinalCabeceraEmpresa").removeClass("color-paleta1 color-paleta3 color-paleta4 color-paleta5").addClass("color-paleta2");
    });

    //Scripts de creación.
    //$('#btnNuevoEstudiossss').click(function () {

    //    var url = "../OfertaEstudio/_OfertaEstudioCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearEstudioContenedor').html(data);
    //        $('#divModalEstudio').modal('show');
    //    });
    //});

    function crearEstudio(idOferta) {

        var url = "../OfertaEstudio/_OfertaEstudioCrear/" + idOferta; // el url del controlador
        $.get(url, function (data) {
            $('#divCrearEstudioContenedor').html(data);
           
            $.validator.unobtrusive.parse('#divCrearEstudioContenedor');
            $('#divModalEstudio').modal('show');
        });
    };

    function crearSector(idOferta) {
        var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialCrear/" + idOferta; // el url del controlador
        $.get(url, function (data) {
            $('#divCrearSectorEmpresarialContenedor').html(data);
            $.validator.unobtrusive.parse('#divCrearSectorEmpresarialContenedor');
            $('#divModalSectorEmpresarial').modal('show');
        });
    }

    //$('#btnNuevoSectorEmpresarial').click(function () {

    //    var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearSectorEmpresarialContenedor').html(data);
    //        $('#divModalSectorEmpresarial').modal('show');
    //    });
    //});

    function crearInfoAdicional(idOferta) {
        //debugger;
        var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalCrear/" + idOferta; // el url del controlador
        $.get(url, function (data) {
            $('#divCrearInfoAdicionalContenedor').html(data);
            $.validator.unobtrusive.parse('#divCrearInfoAdicionalContenedor');
            $('#divModalInfoAdicional').modal('show');
        });
    }

    //$('#btnNuevaInfoAdicional').click(function () {

    //    var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearInfoAdicionalContenedor').html(data);
    //        $('#divModalInfoAdicional').modal('show');
    //    });
    //});

    //Scripts para actualizar.
    //$('.btnEditarEstudio22').click(function () {
    //    debugger;
    //    var url = "../OfertaEstudio/_OfertaEstudioEditar"; // el url del controlador
    //    var id = $(this).attr('data-id'); // el id del botón.
    //    $.get(url + '/' + id, function (data) {
    //        $('#divEditarEstudioContenedor').html(data);
    //        $('#divEditarModalEstudio').modal('show');
    //    });
    //});

    function editarEstudio(id) {

        var url = "../OfertaEstudio/_OfertaEstudioEditar"; // el url del controlador
        $.get(url + '/' + id, function (data) {
            $('#divEditarEstudioContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarEstudioContenedor');
            $('#divEditarModalEstudio').modal('show');
        });
    };

    function editarSector(id) {

        var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialEditar"; // el url del controlador
        $.get(url + '/' + id, function (data) {
            $('#divEditarSectorEmpresarialContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarSectorEmpresarialContenedor');
            $('#divEditarModalSectorEmpresarial').modal('show');
        });
    };

    function editarInfoAdicional(id) {

        var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalEditar"; // el url del controlador
        $.get(url + '/' + id, function (data) {
            $('#divEditarInfoAdicionalContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarInfoAdicionalContenedor');
            $('#divEditarModalInfoAdicional').modal('show');
        });
    };

    //Eliminaciones
    function eliminarEstudio(idOfertaEstudio) {

        if (confirm('Está seguro de eliminar el registro?')) {           
            //debugger;
            var url = "../OfertaEstudio/_OfertaEstudioEliminar/" + idOfertaEstudio; // el url del controlador
            $.get(url, function (data)
                {                   
                    $('#divListaEstudios').html(data);                    
                });
        }             
    };

    function eliminarSector(idOfertaSector) {

        if (confirm('Está seguro de eliminar el registro?'))
        {            
            var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialEliminar/" + idOfertaSector;
            $.get(url, function (data) {
                $('#divListaSectores').html(data);

            });
        }       
    };

    function eliminarInfoAdicional(idOfertaInfoAdicional) {

        if (confirm('Está seguro de eliminar el registro?')) {
            var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalEliminar/" + idOfertaInfoAdicional;
            $.get(url, function (data) {
                $('#divListaInfoAdicional').html(data);
            });
        }
    };

    //Script para cerrar el modal cuando la actualización por ajax termina.
    function cerrarModal() {
        $('.modal.in').modal('hide');
    }

    function alertTemporal()
    {
        alert('Las fase se grabaron con éxito');
    }

</script>
