@model UTP.PortalEmpleabilidad.Modelo.Empresa



<div class="modal-content">

    

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="ModificaDatosEmpresa">Datos de la Empresa</h4>
    </div>
    @*@using (Html.BeginForm("EditarEmpresa", "Empresa", FormMethod.Post))*@

    <div class="modal-body">

        <!--Se guarda el Id de la empresa en un Hidden-->
        @Html.HiddenFor(m => m.IdEmpresa)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Nombre *</span>                                      
                    @Html.Raw(@Html.EditorFor(model => model.NombreComercial).ToString().Replace("text-box single-line", "form-control"))                 
                    @Html.ValidationMessageFor(model => model.NombreComercial, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Razón<br />Social *</span>
                    @*<input name="RazonSocial" type="text" class="form-control" placeholder="Razón Social de la Empresa" value="@Model.RazonSocial">*@
                    @Html.Raw(@Html.EditorFor(model => model.RazonSocial).ToString().Replace("text-box single-line", "form-control"))                    
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">País</span>
                    @*@Html.DropDownList("PaisIdListaValor", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(m => m.PaisIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">RUC *</span>
                    @*<input type="text" class="form-control" name="IdentificadorTributario" placeholder="RUC o Identificador Tributario" value="@Model.IdentificadorTributario">*@
                    @Html.Raw(@Html.EditorFor(model => model.IdentificadorTributario).ToString().Replace("text-box single-line", "form-control"))
                    @Html.ValidationMessageFor(model => model.IdentificadorTributario, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Descrip-<br />ción</span>
                    @*<textarea class="form-control" placeholder="Descripción de la Empresa" name="DescripcionEmpresa" rows="3">@Model.DescripcionEmpresa</textarea>*@
                    @Html.Raw(@Html.EditorFor(model => model.DescripcionEmpresa).ToString().Replace("text-box multi-line", "form-control"))
                    @Html.ValidationMessageFor(model => model.DescripcionEmpresa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Link Video</span>
                    @*<input type="text" class="form-control" name="LinkVideo" placeholder="Link" value="@Model.LinkVideo">*@
                    @Html.Raw(@Html.EditorFor(model => model.LinkVideo).ToString().Replace("text-box single-line", "form-control"))
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Año de<br />Creación</span>
                    @*<input type="text" class="form-control" name="AnoCreacion" placeholder="Año de Creación" value="@Model.AnoCreacion">*@
                    @Html.Raw(@Html.EditorFor(model => model.AnoCreacion).ToString().Replace("text-box single-line", "form-control"))
                    @Html.ValidationMessageFor(model => model.AnoCreacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Número de<br />Empleados</span>
                    @*@Html.DropDownList("NumeroEmpleadosIdListaValor", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(m => m.NumeroEmpleadosIdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Sector<br />Principal</span>
                    @Html.DropDownListFor(m => m.SectorEmpresarial1IdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.SectorEmpresarial1IdListaValor, "", new { @class = "text-danger" })
                </div>
                
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Sector 2</span>
                    @*@Html.DropDownList("SectorEmpresarial2IdListaValor", null,  htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(m => m.SectorEmpresarial2IdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Sector 3</span>
                    @*@Html.DropDownList("SectorEmpresarial3IdListaValor", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(m => m.SectorEmpresarial3IdListaValor, null, "Seleccione", htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12" style="text-align:right;">
                @*<button type="button" class="btn btn-default color-paleta4 fuente-pequeña" style="color: white; margin-bottom: 10px;">Guardar</button>*@
                <input type="submit"  class="btn btn-default color-paleta4 fuente-pequeña" value="Guardar"  />

 
            </div>
        </div>


    </div>

    <div class="modal-footer">
    </div>

      

    @*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>*@
</div>

<script>
    // FUNCION PARA VALIDAR RANGO
    function rangoNumeros(numero) {

        if (numero >= 1 & numero <= 10) {
            alert("La accion a tomar si esta entre 1 y 10");
        }

        else {
            alert("La accion a tomar si no esta entre rango.., en este caso se borrar el contenido de la caja de texto");
            document.getElementById('campo').value = "";
        }
    }

    function solonumeros(e) {
        key = e.keyCode || e.which;
        teclado

    }


</script>

