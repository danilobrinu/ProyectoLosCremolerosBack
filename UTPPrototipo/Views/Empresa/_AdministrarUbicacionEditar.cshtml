@model UTP.PortalEmpleabilidad.Modelo.EmpresaLocacion

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="NuevaUbicacion">Ubicación: @Model.NombreLocacion</h4>
    </div>
    <div class="modal-body">
        
        @Html.HiddenFor(m => m.IdEmpresaLocacion)
        @Html.HiddenFor(m => m.IdEmpresa)
        @Html.Hidden("IdDireccionCiudad", Model.DireccionCiudadId)
        @Html.Hidden("IdDireccionDistrito", Model.DireccionDistritoId)
        @Html.Hidden("DireccionDepartamento", Model.DireccionDepartamento)
        @Html.Hidden("DireccionCiudad", Model.DireccionCiudad)
        @Html.Hidden("DireccionDistrito", Model.DireccionDistrito)
     
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })

        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*) Tipo</span>
                    @Html.DropDownListFor(m => m.TipoLocacionIdListaValor, null, "-- Especifique tipo Ubicación --", htmlAttributes: new { @class = "form-control" })
                    
                </div>@Html.ValidationMessageFor(model => model.TipoLocacionIdListaValor, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">(*) Nombre</span>
                    @Html.TextBoxFor(model => model.NombreLocacion, "", new { @class = "form-control", @placeholder = "Nombre de la Ubicación" })
                    
                </div>@Html.ValidationMessageFor(model => model.NombreLocacion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">E-Mail</span>
                    @Html.TextBoxFor(model => model.CorreoElectronico, "", new { @class = "form-control", @placeholder = "Dirección electrónica para la Ubicación" })
                    
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Teléfono</span>
                    @Html.TextBoxFor(model => model.TelefonoFijo, "", new { @class = "form-control", @placeholder = "Teléfono de la Ubicación" })
                    
                </div>@Html.ValidationMessageFor(model => model.TelefonoFijo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">(*) <br />Dirección</span>
                    @Html.TextAreaFor(model => model.Direccion, new { @class = "form-control", @placeholder = "Calle y Número de la Ubicación, interior, depto, oficina, urbanización" })
                    
                </div>@Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*) Depar-<br />tamento</span>
                    @Html.DropDownListFor(m => m.DireccionDepartamentoId, null, "- Seleccione Departamento -", htmlAttributes: new { @class = "form-control", @id = "DireccionDepartamentoId" })
                </div>@Html.ValidationMessageFor(model => model.DireccionDepartamentoId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*) Ciudad</span>
                    @Html.DropDownListFor(m => m.DireccionCiudadId, null, "- Seleccione Ciudad -", htmlAttributes: new { @class = "form-control", @id = "DireccionCiudadId" })
                    @*<select class="form-control" id="DireccionCiudadId" name="DireccionCiudadId" data-val="true" data-val_required="Falta la provincia" aria-required="true" aria-invalid="false" aria-describedby="DireccionCiudad-error"></select>*@
                </div>@Html.ValidationMessageFor(model => model.DireccionCiudadId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)<br />Distrito</span>
                    @Html.DropDownListFor(m => m.DireccionDistritoId, null, "- Seleccione Distrito -", htmlAttributes: new { @class = "form-control", @id = "DireccionDistritoId" })
                    @*<select class="form-control" id="DireccionDistritoId" name="DireccionDistritoId" data-val="true" data-val_required="Falta el distrito"></select>*@
                </div>@Html.ValidationMessageFor(model => model.DireccionDistritoId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*) Estado</span>
                    @Html.DropDownListFor(m => m.EstadoLocacionIdListaValor, null, "- Seleccione Eestado -", htmlAttributes: new { @class = "form-control" })
                    
                </div>@Html.ValidationMessageFor(model => model.EstadoLocacionIdListaValor, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12" style="text-align:right;">
                <button type="submit" class="btn btn-default color-paleta4 fuente-pequeña">Guardar</button>
            </div>
        </div>

    </div>
    <div class="modal-footer">
    </div>
</div>
<script>
    $(document).ready(function () {
        
        InitialCombos($("#DireccionDepartamentoId").val());
    });

    
    $("#DireccionDepartamentoId").change(function () {

        fillCombo("DireccionCiudadId", $("#DireccionDepartamentoId").val());
    });
    $("#DireccionCiudadId").change(function () {
        fillCombo("DireccionDistritoId", $("#DireccionCiudadId").val());
    });

    function fillCombo(updateId, value) {
        if (value != "" && value != null) {
            $.getJSON('@Url.Action("ListarListaValor", "Empresa")'
                + '/' + value,
                function (data) {
                    $("#" + updateId).empty();
                    $("#" + updateId).append("<option value selected='true'>- Seleccion -</option>");
                    $.each(data, function (i, item) {
                        $("#" + updateId).append("<option value='"
                           + item.IdListaValor + "'>" + item.Valor
                           + "</option>");
                        $("#" + updateId).attr('disabled', false);
                    });
                });
        } else {
            $("#" + updateId).empty();
            $("#" + updateId).trigger("change");
            $("#" + updateId).attr('disabled', true);
        }
    }
    function InitialCombos(value) {
        var ListaValorPro = "";
        if (value != "" && value != null) {
            //Cargar combo de provincias
            $.getJSON('@Url.Action("ListarListaValor", "Empresa")'
                + '/' + value,
                function (data) {
                    $("#DireccionCiudadId").empty();
                    $("#DireccionCiudadId").append("<option value selected='true'>- Seleccione Ciudad -</option>");
                    $.each(data, function (i, item) {
                        if (item.IdListaValor == $("#IdDireccionCiudad").val()) {
                            $("#DireccionCiudadId").append("<option selected value='"
                                 + item.IdListaValor + "'>" + item.Valor
                                 + "</option>");
                        } else {
                            $("#DireccionCiudadId").append("<option value='"
                               + item.IdListaValor + "'>" + item.Valor
                               + "</option>");
                        }
                        $("#DireccionCiudadId").attr('disabled', false);
                    });
                });
            value = $("#IdDireccionCiudad").val()
            console.log(value);
            if (value != "" && value != null) {
                //Cargar combo de distrito
                $.getJSON('@Url.Action("ListarListaValor", "Empresa")'
                    + '/' + value,
                    function (data) {
                        $("#DireccionDistritoId").empty();
                        $("#DireccionDistritoId").append("<option value selected='true'>- Seleccione Distrito -</option>");
                        $.each(data, function (i, item) {
                            if (item.IdListaValor == $("#IdDireccionDistrito").val()) {
                                $("#DireccionDistritoId").append("<option selected value='"
                                     + item.IdListaValor + "'>" + item.Valor
                                     + "</option>");
                            } else {
                                $("#DireccionDistritoId").append("<option value='"
                                   + item.IdListaValor + "'>" + item.Valor
                                   + "</option>");
                            }
                            $("#DireccionDistritoId").attr('disabled', false);
                        });
                    });
            }
        }
    }


</script>
